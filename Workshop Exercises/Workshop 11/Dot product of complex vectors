#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Jan 15 12:37:52 2021

@author: Matthew
"""

import numpy as np
def dot(u,v):
    u_array = np.zeros(len(u), dtype='complex128')
    for i in range(len(u)):
        u_array[i] = u[i]
    v_array = np.zeros(len(v), dtype='complex128')
    for i in range(len(v)):
        v_array[i] = v[i]
    sum = 0
    if len(u_array) != len(v_array):
        sum = 'Error, lengths of input vectors inequal'
    else:
        for i in range(len(u_array)):
            sum += u_array[i] * v_array[i]
    print(sum) 
    
    

    
A_elements = input('What are the elements of vector A?')
A_elements = A_elements.split()
A = np.zeros(len(A_elements), dtype='complex128')
for i in range(len(A_elements)):
    place = A_elements[i]
    index = place.index('+')
    if index == 1:
        a = float(place[0])
    else:
        a = float(place[0:(index)])
    if (index+1) == len(place)-1:
        b = float(place[-2])
    else:
        b = float(place[(index+1):(-1)])   
    z = a + b*1j
    A[i] = z

B_elements = input('What are the elements of vector B?')
B_elements = B_elements.split()
B = np.zeros(len(B_elements), dtype='complex128')
for i in range(len(B_elements)):
    place = B_elements[i]
    index = place.index('+')
    if index == 1:
        a = float(place[0])
    else:
        a = float(place[0:(index)])
    if (index+1) == len(place)-1:
        b = float(place[-2])
    else:
        b = float(place[(index+1):(-1)])   
    z = a + b*1j
    B[i] = z
dot(A,B)